{"ast":null,"code":"import _toConsumableArray from \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\src\\\\features\\\\ToDoTasks\\\\components\\\\EditTaskForm.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskUpdated } from \"../ToDoTasksSlice\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function EditTaskForm(props) {\n  var _this = this;\n\n  var taskId = props.id;\n  var task = useSelector(function (state) {\n    return state.toDoTasks.find(function (task) {\n      return task.id === +taskId;\n    });\n  });\n  var categories = useSelector(function (state) {\n    return state.categories;\n  });\n\n  if (!task) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Task not found!\");\n  }\n\n  var _useState = useState(task.title),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(task.categoryId),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryId = _useState4[0],\n      setCategoryId = _useState4[1];\n\n  var _useState5 = useState(task.deadlineDate),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deadlineDate = _useState6[0],\n      setDeadlineDate = _useState6[1];\n\n  var onTitleChanged = function onTitleChanged(e) {\n    return setTitle(e.target.value);\n  };\n\n  var onCategoryIdChanged = function onCategoryIdChanged(e) {\n    return setCategoryId(e.target.value);\n  };\n\n  var onDeadlineChanged = function onDeadlineChanged(e) {\n    return setDeadlineDate(e.target.value);\n  };\n\n  var categoriesCopy = _toConsumableArray(categories);\n\n  var dispatch = useDispatch();\n  var navigate = useNavigate();\n\n  var onSaveTaskClicked = function onSaveTaskClicked() {\n    if (title && categoryId) {\n      dispatch(taskUpdated({\n        id: taskId,\n        title: title,\n        categoryId: categoryId,\n        category: categoriesCopy.find(function (category) {\n          return category.id === +categoryId;\n        }).name,\n        deadlineDate: deadlineDate\n      }));\n      navigate('/todo');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Add task:\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    size: \"50\",\n    value: title,\n    onChange: onTitleChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: categoryId,\n    onChange: onCategoryIdChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, categoriesCopy.map(function (category) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: category.id,\n      value: category.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, category.name);\n  }))), !task.isDone && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Deadline (empty - no deadline)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    value: deadlineDate,\n    onChange: onDeadlineChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"button\",\n    onClick: onSaveTaskClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Save\")));\n}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","taskUpdated","useNavigate","EditTaskForm","props","taskId","id","task","state","toDoTasks","find","categories","title","setTitle","categoryId","setCategoryId","deadlineDate","setDeadlineDate","onTitleChanged","e","target","value","onCategoryIdChanged","onDeadlineChanged","categoriesCopy","dispatch","navigate","onSaveTaskClicked","category","name","map","isDone"],"sources":["E:/sana/ToDoList/react-view/src/features/ToDoTasks/components/EditTaskForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {taskUpdated} from \"../ToDoTasksSlice\";\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\nexport default function EditTaskForm(props) {\r\n    const taskId = props.id;\r\n\r\n\r\n    const task = useSelector(state =>\r\n        state.toDoTasks.find(task => task.id === +taskId)\r\n    );\r\n    const categories = useSelector(state => state.categories);\r\n\r\n\r\n    if (!task) {\r\n        return (<h2>Task not found!</h2>)\r\n    }\r\n\r\n    const [title, setTitle] = useState(task.title);\r\n    const [categoryId, setCategoryId] = useState(task.categoryId);\r\n    const [deadlineDate, setDeadlineDate] = useState(task.deadlineDate);\r\n\r\n\r\n    const onTitleChanged = e => setTitle(e.target.value);\r\n    const onCategoryIdChanged = e => setCategoryId(e.target.value);\r\n    const onDeadlineChanged = e => setDeadlineDate(e.target.value);\r\n\r\n    let categoriesCopy = [...categories];\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const onSaveTaskClicked = () => {\r\n        if (title && categoryId) {\r\n            dispatch(taskUpdated({\r\n                id: taskId,\r\n                title,\r\n                categoryId,\r\n                category: categoriesCopy.find(category => category.id === +categoryId).name,\r\n                deadlineDate\r\n            }))\r\n            navigate('/todo')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"add-task\"}>\r\n            <h3>Add task:</h3>\r\n            <form method=\"post\">\r\n                <div>\r\n                    <p>Title</p>\r\n                    <input type=\"text\" size=\"50\" value={title} onChange={onTitleChanged}/>\r\n                </div>\r\n                <div>\r\n                    <p>Category</p>\r\n                    <select value={categoryId} onChange={onCategoryIdChanged}>\r\n                        {categoriesCopy.map(category => (\r\n                            <option key={category.id} value={category.id}>{category.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {\r\n                    !task.isDone &&\r\n                    <div>\r\n                        <p>Deadline (empty - no deadline)</p>\r\n                        <input type=\"datetime-local\" value={deadlineDate} onChange={onDeadlineChanged}/>\r\n                    </div>\r\n                }\r\n                <button className={\"submit-button\"} type=\"button\" onClick={onSaveTaskClicked}>Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}