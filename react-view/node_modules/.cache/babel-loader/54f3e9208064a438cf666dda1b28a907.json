{"ast":null,"code":"import _toConsumableArray from \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\src\\\\features\\\\ToDoTasks\\\\components\\\\AddTaskForm.js\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from 'react-redux';\nimport { taskAdded } from '../ToDoTasksSlice';\nimport DateTimeToString from \"../../../Convertors/DateTimeToString\";\nexport function AddTaskForm() {\n  var _this = this;\n\n  var categories = useSelector(function (state) {\n    return state.categories;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryId = _useState4[0],\n      setCategoryId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deadlineDate = _useState6[0],\n      setDeadlineDate = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      titleValidation = _useState8[0],\n      setTitleValidation = _useState8[1];\n\n  var dispatch = useDispatch();\n\n  var onTitleChanged = function onTitleChanged(e) {\n    return setTitle(e.target.value);\n  };\n\n  var onCategoryIdChanged = function onCategoryIdChanged(e) {\n    return setCategoryId(e.target.value);\n  };\n\n  var onDeadlineChanged = function onDeadlineChanged(e) {\n    return setDeadlineDate(e.target.value);\n  };\n\n  var categoriesCopy = _toConsumableArray(categories);\n\n  function validateForm() {\n    if (title === \"\") {\n      setTitleValidation(\"Title is required\");\n      return false;\n    } else {\n      setTitleValidation(\"\");\n      return true;\n    }\n  }\n\n  var onAddTaskClicked = function onAddTaskClicked() {\n    if (validateForm) {\n      var currentDate = new Date();\n      dispatch(taskAdded({\n        id: Date.now(),\n        title: title,\n        categoryId: categoryId,\n        deadlineDate: deadlineDate,\n        isDone: false,\n        createdDate: DateTimeToString(currentDate),\n        doneDate: ''\n      }));\n      setTitle('');\n      setCategoryId(1);\n      setDeadlineDate('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Add task:\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    size: \"50\",\n    value: title,\n    onChange: onTitleChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"validation-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, titleValidation)), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: categoryId,\n    onChange: onCategoryIdChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, categoriesCopy.map(function (category) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: category.id,\n      value: category.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, category.name);\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Deadline (empty - no deadline)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    value: deadlineDate,\n    onChange: onDeadlineChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"button\",\n    onClick: onAddTaskClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Add\")));\n}","map":{"version":3,"names":["React","useState","useSelector","useDispatch","taskAdded","DateTimeToString","AddTaskForm","categories","state","title","setTitle","categoryId","setCategoryId","deadlineDate","setDeadlineDate","titleValidation","setTitleValidation","dispatch","onTitleChanged","e","target","value","onCategoryIdChanged","onDeadlineChanged","categoriesCopy","validateForm","onAddTaskClicked","currentDate","Date","id","now","isDone","createdDate","doneDate","map","category","name"],"sources":["E:/sana/ToDoList/react-view/src/features/ToDoTasks/components/AddTaskForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {taskAdded} from '../ToDoTasksSlice'\r\nimport DateTimeToString from \"../../../Convertors/DateTimeToString\";\r\n\r\n\r\nexport function AddTaskForm() {\r\n    const categories = useSelector(state => state.categories);\r\n    const [title, setTitle] = useState('');\r\n    const [categoryId, setCategoryId] = useState(1);\r\n    const [deadlineDate, setDeadlineDate] = useState('');\r\n    const [titleValidation, setTitleValidation] = useState('');\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChanged = e => setTitle(e.target.value);\r\n    const onCategoryIdChanged = e => setCategoryId(e.target.value);\r\n    const onDeadlineChanged = e => setDeadlineDate(e.target.value);\r\n\r\n    let categoriesCopy = [...categories];\r\n\r\n    function validateForm(){\r\n        if(title === \"\"){\r\n            setTitleValidation(\"Title is required\");\r\n            return false;\r\n        }else{\r\n            setTitleValidation(\"\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const onAddTaskClicked = () => {\r\n        if (validateForm) {\r\n            let currentDate = new Date();\r\n            dispatch(\r\n                taskAdded({\r\n                    id: Date.now(),\r\n                    title,\r\n                    categoryId,\r\n                    deadlineDate,\r\n                    isDone: false,\r\n                    createdDate: DateTimeToString(currentDate),\r\n                    doneDate: ''\r\n                })\r\n            )\r\n            setTitle('');\r\n            setCategoryId(1);\r\n            setDeadlineDate('');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"add-task\"}>\r\n            <h3>Add task:</h3>\r\n            <form>\r\n                <label>\r\n                    <p>Title</p>\r\n                    <input type=\"text\" size=\"50\" value={title} onChange={onTitleChanged}/>\r\n                    <p className={\"validation-error\"}>{titleValidation}</p>\r\n                </label>\r\n                <label>\r\n                    <p>Category</p>\r\n                    <select value={categoryId} onChange={onCategoryIdChanged}>\r\n                        {categoriesCopy.map(category => (\r\n                            <option key={category.id} value={category.id}>{category.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <p>Deadline (empty - no deadline)</p>\r\n                    <input type=\"datetime-local\" value={deadlineDate} onChange={onDeadlineChanged}/>\r\n                </label>\r\n                <button className={\"submit-button\"} type=\"button\" onClick={onAddTaskClicked}>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}