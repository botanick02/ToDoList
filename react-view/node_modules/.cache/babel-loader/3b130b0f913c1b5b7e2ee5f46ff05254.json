{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = [{\n  id: \"1\",\n  title: \"Do something\",\n  categoryId: '2',\n  category: \"Work\",\n  createdDate: \"2022-06-01T13:53\",\n  deadlineDate: \"2022-06-23T13:53\",\n  isDone: false,\n  doneDate: \"\"\n}, {\n  id: \"8\",\n  title: \"Do something 4\",\n  categoryId: '3',\n  category: \"School\",\n  createdDate: \"2022-06-04T13:53\",\n  deadlineDate: \"\",\n  isDone: true,\n  doneDate: \"2022-06-04T13:56\"\n}];\nvar toDoTasksSlice = createSlice({\n  name: 'toDoTasks',\n  initialState: initialState,\n  reducers: {\n    taskAdded: function taskAdded(state, action) {\n      state.push(action.payload);\n    },\n    taskUpdated: function taskUpdated(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          title = _action$payload.title,\n          categoryId = _action$payload.categoryId,\n          deadlineDate = _action$payload.deadlineDate;\n      var existingTask = state.find(function (task) {\n        return task.id === id;\n      });\n\n      if (existingTask) {\n        existingTask.title = title;\n        existingTask.categoryId = categoryId;\n        existingTask.deadlineDate = deadlineDate;\n      }\n    },\n    isDoneSwitched: function isDoneSwitched(state, action) {\n      var id = action.payload.id;\n      var existingTask = state.find(function (task) {\n        return task.id === id;\n      });\n\n      if (existingTask) {\n        existingTask.isDone = !existingTask.isDone;\n      }\n    },\n    taskDeleted: function taskDeleted(state, action) {\n      var id = action.payload.id;\n      state = state.filter(function (task) {\n        return task.id !== id;\n      });\n      console.log(stage.length);\n    }\n  }\n});\nvar _toDoTasksSlice$actio = toDoTasksSlice.actions,\n    taskAdded = _toDoTasksSlice$actio.taskAdded,\n    taskUpdated = _toDoTasksSlice$actio.taskUpdated,\n    isDoneSwitched = _toDoTasksSlice$actio.isDoneSwitched,\n    taskDeleted = _toDoTasksSlice$actio.taskDeleted;\nexport { taskAdded, taskUpdated, isDoneSwitched, taskDeleted };\nexport default toDoTasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","title","categoryId","category","createdDate","deadlineDate","isDone","doneDate","toDoTasksSlice","name","reducers","taskAdded","state","action","push","payload","taskUpdated","existingTask","find","task","isDoneSwitched","taskDeleted","filter","console","log","stage","length","actions","reducer"],"sources":["E:/sana/ToDoList/react-view/src/features/ToDoTasks/ToDoTasksSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = [\r\n    {\r\n        id: \"1\",\r\n        title: \"Do something\",\r\n        categoryId: '2',\r\n        category: \"Work\",\r\n        createdDate: \"2022-06-01T13:53\",\r\n        deadlineDate: \"2022-06-23T13:53\",\r\n        isDone: false,\r\n        doneDate: \"\"\r\n    },\r\n    {\r\n        id: \"8\",\r\n        title: \"Do something 4\",\r\n        categoryId: '3',\r\n        category: \"School\",\r\n        createdDate: \"2022-06-04T13:53\",\r\n        deadlineDate: \"\",\r\n        isDone: true,\r\n        doneDate: \"2022-06-04T13:56\"\r\n    },\r\n]\r\n\r\nconst toDoTasksSlice = createSlice({\r\n    name: 'toDoTasks',\r\n    initialState,\r\n    reducers: {\r\n        taskAdded(state, action) {\r\n            state.push(action.payload);\r\n        },\r\n        taskUpdated(state, action){\r\n            const {id, title, categoryId, deadlineDate} = action.payload;\r\n            let existingTask = state.find(task => task.id === id);\r\n            if(existingTask){\r\n                existingTask.title = title;\r\n                existingTask.categoryId = categoryId;\r\n                existingTask.deadlineDate = deadlineDate;\r\n            }\r\n        },\r\n        isDoneSwitched(state, action){\r\n            const {id} = action.payload;\r\n            let existingTask = state.find(task => task.id === id);\r\n            if(existingTask){\r\n                existingTask.isDone = !existingTask.isDone;\r\n            }\r\n\r\n        },\r\n        taskDeleted(state, action){\r\n            const {id} = action.payload;\r\n            state = state.filter(task => task.id !== id);\r\n            console.log(stage.length)\r\n        }\r\n    }\r\n})\r\nexport const {taskAdded, taskUpdated, isDoneSwitched,  taskDeleted} = toDoTasksSlice.actions;\r\n\r\nexport default toDoTasksSlice.reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,IAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,GADR;EAEIC,KAAK,EAAE,cAFX;EAGIC,UAAU,EAAE,GAHhB;EAIIC,QAAQ,EAAE,MAJd;EAKIC,WAAW,EAAE,kBALjB;EAMIC,YAAY,EAAE,kBANlB;EAOIC,MAAM,EAAE,KAPZ;EAQIC,QAAQ,EAAE;AARd,CADiB,EAWjB;EACIP,EAAE,EAAE,GADR;EAEIC,KAAK,EAAE,gBAFX;EAGIC,UAAU,EAAE,GAHhB;EAIIC,QAAQ,EAAE,QAJd;EAKIC,WAAW,EAAE,kBALjB;EAMIC,YAAY,EAAE,EANlB;EAOIC,MAAM,EAAE,IAPZ;EAQIC,QAAQ,EAAE;AARd,CAXiB,CAArB;AAuBA,IAAMC,cAAc,GAAGV,WAAW,CAAC;EAC/BW,IAAI,EAAE,WADyB;EAE/BV,YAAY,EAAZA,YAF+B;EAG/BW,QAAQ,EAAE;IACNC,SADM,qBACIC,KADJ,EACWC,MADX,EACmB;MACrBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACH,CAHK;IAINC,WAJM,uBAIMJ,KAJN,EAIaC,MAJb,EAIoB;MAAA,sBACwBA,MAAM,CAACE,OAD/B;MAAA,IACff,EADe,mBACfA,EADe;MAAA,IACXC,KADW,mBACXA,KADW;MAAA,IACJC,UADI,mBACJA,UADI;MAAA,IACQG,YADR,mBACQA,YADR;MAEtB,IAAIY,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAW,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACnB,EAAL,KAAYA,EAAhB;MAAA,CAAf,CAAnB;;MACA,IAAGiB,YAAH,EAAgB;QACZA,YAAY,CAAChB,KAAb,GAAqBA,KAArB;QACAgB,YAAY,CAACf,UAAb,GAA0BA,UAA1B;QACAe,YAAY,CAACZ,YAAb,GAA4BA,YAA5B;MACH;IACJ,CAZK;IAaNe,cAbM,0BAaSR,KAbT,EAagBC,MAbhB,EAauB;MAAA,IAClBb,EADkB,GACZa,MAAM,CAACE,OADK,CAClBf,EADkB;MAEzB,IAAIiB,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAW,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACnB,EAAL,KAAYA,EAAhB;MAAA,CAAf,CAAnB;;MACA,IAAGiB,YAAH,EAAgB;QACZA,YAAY,CAACX,MAAb,GAAsB,CAACW,YAAY,CAACX,MAApC;MACH;IAEJ,CApBK;IAqBNe,WArBM,uBAqBMT,KArBN,EAqBaC,MArBb,EAqBoB;MAAA,IACfb,EADe,GACTa,MAAM,CAACE,OADE,CACff,EADe;MAEtBY,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAa,UAAAH,IAAI;QAAA,OAAIA,IAAI,CAACnB,EAAL,KAAYA,EAAhB;MAAA,CAAjB,CAAR;MACAuB,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,MAAlB;IACH;EAzBK;AAHqB,CAAD,CAAlC;4BA+BsElB,cAAc,CAACmB,O;IAAvEhB,S,yBAAAA,S;IAAWK,W,yBAAAA,W;IAAaI,c,yBAAAA,c;IAAiBC,W,yBAAAA,W;;AAEvD,eAAeb,cAAc,CAACoB,OAA9B"},"metadata":{},"sourceType":"module"}