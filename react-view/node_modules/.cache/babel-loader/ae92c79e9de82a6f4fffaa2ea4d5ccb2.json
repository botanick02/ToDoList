{"ast":null,"code":"import _toConsumableArray from \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\sana\\\\ToDoList\\\\react-view\\\\src\\\\features\\\\ToDoTasks\\\\EditTaskForm.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskUpdated } from \"./ToDoTasksSlice\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function EditTaskForm(props) {\n  var _this = this;\n\n  var taskId = props.id;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryId = _useState4[0],\n      setCategoryId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deadlineDate = _useState6[0],\n      setDeadlineDate = _useState6[1];\n\n  var task = useSelector(function (state) {\n    return state.toDoTasks.find(function (task) {\n      return task.id === taskId;\n    });\n  });\n  var categories = useSelector(function (state) {\n    return state.categories;\n  });\n\n  if (!task) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Task not found!\");\n  }\n\n  setTitle(task.title);\n  setCategoryId(task.categoryId);\n  setDeadlineDate(task.deadlineDate);\n\n  var onTitleChanged = function onTitleChanged(e) {\n    return setTitle(e.target.value);\n  };\n\n  var onCategoryIdChanged = function onCategoryIdChanged(e) {\n    return setCategoryId(e.target.value);\n  };\n\n  var onDeadlineChanged = function onDeadlineChanged(e) {\n    return setDeadlineDate(e.target.value);\n  };\n\n  var categoriesCopy = _toConsumableArray(categories);\n\n  var dispatch = useDispatch();\n  var navigate = useNavigate();\n\n  var onSaveTaskClicked = function onSaveTaskClicked() {\n    if (title && categoryId) {\n      dispatch(taskUpdated({\n        id: taskId,\n        title: title,\n        categoryId: categoryId,\n        deadlineDate: deadlineDate\n      }));\n      navigate('/todo');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Add task:\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    size: \"50\",\n    value: title,\n    onChange: onTitleChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: categoryId,\n    onChange: onCategoryIdChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, categoriesCopy.map(function (category) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: category.id,\n      value: category.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, category.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Deadline (empty - no deadline)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    value: deadlineDate,\n    onChange: onDeadlineChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onSaveTaskClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Save\")));\n}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","taskUpdated","useNavigate","EditTaskForm","props","taskId","id","title","setTitle","categoryId","setCategoryId","deadlineDate","setDeadlineDate","task","state","toDoTasks","find","categories","onTitleChanged","e","target","value","onCategoryIdChanged","onDeadlineChanged","categoriesCopy","dispatch","navigate","onSaveTaskClicked","map","category","name"],"sources":["E:/sana/ToDoList/react-view/src/features/ToDoTasks/EditTaskForm.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {taskUpdated} from \"./ToDoTasksSlice\";\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\nexport default function EditTaskForm(props){\r\n    const taskId = props.id;\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [categoryId, setCategoryId] = useState(0);\r\n    const [deadlineDate, setDeadlineDate] = useState('');\r\n\r\n    const task = useSelector(state =>\r\n        state.toDoTasks.find(task => task.id === taskId)\r\n    );\r\n    const categories = useSelector(state => state.categories);\r\n\r\n\r\n    if(!task){\r\n        return( <h2>Task not found!</h2>)\r\n    }\r\n\r\n    setTitle(task.title);\r\n    setCategoryId(task.categoryId);\r\n    setDeadlineDate(task.deadlineDate);\r\n\r\n    const onTitleChanged = e => setTitle(e.target.value);\r\n    const onCategoryIdChanged = e => setCategoryId(e.target.value);\r\n    const onDeadlineChanged = e => setDeadlineDate(e.target.value);\r\n\r\n    let categoriesCopy = [...categories];\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const onSaveTaskClicked = () => {\r\n        if (title && categoryId) {\r\n            dispatch(taskUpdated({ id: taskId, title, categoryId, deadlineDate }))\r\n            navigate('/todo')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"addTask\">\r\n            <h3>Add task:</h3>\r\n            <form method=\"post\">\r\n                <div>\r\n                    <p>Title</p>\r\n                    <input type=\"text\" size=\"50\" value={title} onChange={onTitleChanged}/>\r\n                </div>\r\n                <div>\r\n                    <p>Category</p>\r\n                    <select value={categoryId} onChange={onCategoryIdChanged}>\r\n                        {categoriesCopy.map(category => (\r\n                            <option key={category.id} value={category.id}>{category.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <p>Deadline (empty - no deadline)</p>\r\n                    <input type=\"datetime-local\" value={deadlineDate} onChange={onDeadlineChanged}/>\r\n                </div>\r\n                <button type=\"button\" onClick={onSaveTaskClicked}>Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}