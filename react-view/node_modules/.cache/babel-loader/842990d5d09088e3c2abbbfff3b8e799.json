{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = [{\n  id: 1,\n  name: 'Uncategorized'\n}, {\n  id: 2,\n  name: 'Work'\n}, {\n  id: 3,\n  name: 'School'\n}];\nvar categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: initialState,\n  reducers: {\n    categoryAdded: function categoryAdded(state, action) {\n      state.push(action.payload);\n    },\n    categoryUpdated: function categoryUpdated(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          name = _action$payload.name;\n      var existingCategory = state.find(function (category) {\n        return category.id === +id;\n      });\n\n      if (existingCategory) {\n        existingCategory.name = name;\n      }\n    },\n    categoryDeleted: function categoryDeleted(state, action) {\n      var id = action.payload.id;\n      return state.filter(function (category) {\n        return category.id !== +id;\n      });\n    }\n  }\n});\nvar _categoriesSlice$acti = categoriesSlice.actions,\n    categoryAdded = _categoriesSlice$acti.categoryAdded,\n    categoryDeleted = _categoriesSlice$acti.categoryDeleted;\nexport { categoryAdded, categoryDeleted };\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","name","categoriesSlice","reducers","categoryAdded","state","action","push","payload","categoryUpdated","existingCategory","find","category","categoryDeleted","filter","actions","reducer"],"sources":["E:/sana/ToDoList/react-view/src/features/Categories/CategoriesSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = [\r\n    {\r\n        id: 1,\r\n        name: 'Uncategorized'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Work'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'School'\r\n    }\r\n]\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {\r\n        categoryAdded(state, action){\r\n            state.push(action.payload);\r\n        },\r\n        categoryUpdated(state, action){\r\n            const {id, name} = action.payload;\r\n            let existingCategory = state.find(category => category.id === +id);\r\n            if(existingCategory){\r\n                existingCategory.name = name;\r\n            }\r\n        },\r\n        categoryDeleted(state, action){\r\n            const {id} = action.payload;\r\n            return state.filter(category => category.id !== +id);\r\n        }\r\n    }\r\n})\r\nexport const {categoryAdded, categoryDeleted} = categoriesSlice.actions;\r\n\r\nexport default categoriesSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,IAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE;AAFV,CADiB,EAKjB;EACID,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE;AAFV,CALiB,EASjB;EACID,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE;AAFV,CATiB,CAArB;AAeA,IAAMC,eAAe,GAAGJ,WAAW,CAAC;EAChCG,IAAI,EAAE,YAD0B;EAEhCF,YAAY,EAAZA,YAFgC;EAGhCI,QAAQ,EAAE;IACNC,aADM,yBACQC,KADR,EACeC,MADf,EACsB;MACxBD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;IACH,CAHK;IAINC,eAJM,2BAIUJ,KAJV,EAIiBC,MAJjB,EAIwB;MAAA,sBACPA,MAAM,CAACE,OADA;MAAA,IACnBR,EADmB,mBACnBA,EADmB;MAAA,IACfC,IADe,mBACfA,IADe;MAE1B,IAAIS,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAW,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAACZ,EAAT,KAAgB,CAACA,EAArB;MAAA,CAAnB,CAAvB;;MACA,IAAGU,gBAAH,EAAoB;QAChBA,gBAAgB,CAACT,IAAjB,GAAwBA,IAAxB;MACH;IACJ,CAVK;IAWNY,eAXM,2BAWUR,KAXV,EAWiBC,MAXjB,EAWwB;MAAA,IACnBN,EADmB,GACbM,MAAM,CAACE,OADM,CACnBR,EADmB;MAE1B,OAAOK,KAAK,CAACS,MAAN,CAAa,UAAAF,QAAQ;QAAA,OAAIA,QAAQ,CAACZ,EAAT,KAAgB,CAACA,EAArB;MAAA,CAArB,CAAP;IACH;EAdK;AAHsB,CAAD,CAAnC;4BAoBgDE,eAAe,CAACa,O;IAAlDX,a,yBAAAA,a;IAAeS,e,yBAAAA,e;;AAE7B,eAAeX,eAAe,CAACc,OAA/B"},"metadata":{},"sourceType":"module"}